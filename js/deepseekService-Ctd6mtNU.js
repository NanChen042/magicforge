var O=Object.defineProperty;var T=(h,e,s)=>e in h?O(h,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):h[e]=s;var S=(h,e,s)=>T(h,typeof e!="symbol"?e+"":e,s);import{d as A}from"./pinia-BGq-fEY2.js";const U=A("api",{state:()=>({apiUrl:localStorage.getItem("apiUrl")||"",apiKey:localStorage.getItem("apiKey")||"",modelName:localStorage.getItem("modelName")||"deepseek-ai/DeepSeek-R1-Distill-Qwen-7B"}),actions:{setApiUrl(h){this.apiUrl=h,localStorage.setItem("apiUrl",h)},setApiKey(h){this.apiKey=h,localStorage.setItem("apiKey",h)},setModelName(h){this.modelName=h,localStorage.setItem("modelName",h)}}});class I{static init(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(e){const s=JSON.parse(e);this.checkpoints=new Map(Object.entries(s));const n=Date.now();for(const[t,i]of this.checkpoints.entries())n-i.timestamp>24*60*60*1e3&&this.checkpoints.delete(t);this.saveToStorage()}}catch(e){console.error("初始化检查点服务失败:",e),this.checkpoints.clear()}}static create(e){const s=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(s,{timestamp:Date.now(),...e}),s}static get(e){return this.checkpoints.get(e)}static getLatest(){return Array.from(this.checkpoints.values()).sort((s,n)=>n.timestamp-s.timestamp)[0]}static delete(e){this.checkpoints.delete(e),this.saveToStorage()}static clear(){this.checkpoints.clear(),this.saveToStorage()}static saveToStorage(){try{const e=Object.fromEntries(this.checkpoints);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e))}catch(e){console.error("保存检查点失败:",e)}}static generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}static async saveCheckpoint(e){const s=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(s,{timestamp:Date.now(),scene:e}),console.log("已创建检查点:",s),s}static async loadCheckpoint(e){const s=this.checkpoints.get(e);return s?(console.log("已加载检查点:",e),s.scene):(console.log("检查点不存在:",e),null)}static cleanupExpiredCheckpoints(e=60){const s=Date.now(),n=e*60*1e3;let t=0;this.checkpoints.forEach((i,o)=>{s-i.timestamp>n&&(this.checkpoints.delete(o),t++)}),t>0&&console.log(`已清除 ${t} 个过期检查点`)}}S(I,"STORAGE_KEY","game_checkpoints"),S(I,"MAX_CHECKPOINTS",5),S(I,"checkpoints",new Map);const u={apiKey:localStorage.getItem("apiKey")||"5f28bc1b-f678-466a-9143-f1f5f25bda86",baseUrl:localStorage.getItem("apiUrl")||"https://ark.cn-beijing.volces.com/api/v3/chat/completions",model:localStorage.getItem("modelName")||"doubao-seed-1-6-250615",temperature:.8,maxTokens:2e3};function D(h){Object.assign(u,h),h.apiKey&&localStorage.setItem("apiKey",h.apiKey),h.baseUrl&&localStorage.setItem("apiUrl",h.baseUrl),h.model&&localStorage.setItem("modelName",h.model)}class x{static setModelVersion(e){e==="r1"?(u.model="deepseek-r1",console.log("已切换到DeepSeek-R1模型")):e==="v3"?(u.model="deepseek-chat",console.log("已切换到DeepSeek-Chat模型")):console.error("不支持的模型版本:",e)}static getModelVersion(){return u.model==="deepseek-chat"?"v3":"r1"}static async sendRequest(e){var s,n,t;try{if(console.log("发送请求到Deepseek API..."),console.log("使用模型:",u.model),console.log("API地址:",u.baseUrl),!u.baseUrl||!u.baseUrl.startsWith("http"))throw new Error("无效的API地址: "+u.baseUrl);const i={model:u.model,messages:e,temperature:u.temperature,max_tokens:u.maxTokens,stream:!1,stop:null};console.log("请求体:",JSON.stringify(i,null,2));const o=await fetch(u.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${u.apiKey}`},body:JSON.stringify(i)});if(!o.ok){const d=await o.text();throw console.error("API错误响应:",d),new Error(`API请求失败: ${o.status} - ${d}`)}const r=await o.json();if(console.log("API响应:",r),!((t=(n=(s=r.choices)==null?void 0:s[0])==null?void 0:n.message)!=null&&t.content))throw console.error("API响应格式异常:",r),new Error("API响应格式不正确: "+JSON.stringify(r));return r}catch(i){throw console.error("API请求失败:",i),i}}static async generateInitialScene(){const e=this.sceneTypes[Math.floor(Math.random()*this.sceneTypes.length)],s=Math.random()>.7?this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)]:void 0,n=`请以第一人称的视角，扮演小明（最强剑魔）生成游戏开场场景。

${this.characterBackground}

场景类型：${e}
${s?`特殊事件：${s}`:""}

要求：
1. 场景描述要生动有趣，突出高中生活和游戏双重身份的冲突
2. 对话要用小明的语气，多用游戏梗和台词
3. 描述要有细节，包括天气、环境、人物心情等
4. 选项要有趣且符合人物性格，**每个选项的text必须完全不同，不能重复**
5. 如果有特殊事件，要自然地融入场景中
6. **选项文本必须具体明确，避免使用模糊词汇如"游戏状态"、"情感变化"等**

输出格式：
{
  "description": "场景描述（200字以内）",
  "dialog": "小明的对话（50字以内）",
  "options": [
    {"text": "具体行动1（15字以内）", "hint": "选项提示（20字以内）"},
    {"text": "具体行动2（15字以内）", "hint": "选项提示（20字以内）"},
    {"text": "具体行动3（15字以内）", "hint": "选项提示（20字以内）"}
  ],
  "specialEvent": "特殊事件的具体描述（可选，50字以内）"
}`;try{const t=[{role:"system",content:'你现在是小明（游戏ID：最强剑魔），一个高三学生兼游戏主播。你要生动地讲述在学习和游戏之间的故事。确保输出是合法的JSON格式。重要：每个选项的text字段必须完全不同，使用具体的动作词汇，如"去图书馆学习"、"开始排位赛"、"找同学聊天"等，避免使用抽象词汇。'},{role:"user",content:n}],o=(await this.sendRequest(t)).choices[0].message.content;return this.parseResponse(o,1)}catch(t){throw console.error("生成初始场景失败:",t),t}}static createModel(e={}){return{streamText:async({messages:s,model:n=u.model,temperature:t=u.temperature,max_tokens:i=u.maxTokens})=>{console.log("使用模型:",n);try{const o=await fetch(u.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${u.apiKey}`},body:JSON.stringify({model:n,messages:s,temperature:t,max_tokens:i,stream:!0})});if(!o.ok){const r=await o.text();throw new Error(`API响应错误 ${o.status}: ${r}`)}return{dataStream:this._createAsyncIterator(o)}}catch(o){throw console.error("流式请求失败:",o),o}}}}static async*_createAsyncIterator(e){if(!e.body)throw new Error("响应没有可读的正文");const s=e.body.getReader(),n=new TextDecoder;let t="";try{for(;;){const{done:i,value:o}=await s.read();if(i)break;t+=n.decode(o,{stream:!0});const r=t.split(`
`);t=r.pop()||"";for(const d of r)if(d.trim()!==""&&d.trim()!=="data: [DONE]"&&d.startsWith("data: "))try{yield JSON.parse(d.substring(5))}catch(y){console.error("解析流数据时出错:",y,"Line:",d)}}}finally{s.releaseLock()}}static async generateScene(e){var s,n,t,i,o,r,d,y,l,g;try{if(e.checkpointId)try{const $=await I.loadCheckpoint(e.checkpointId);if($)return console.log("已从检查点恢复场景:",e.checkpointId),$}catch($){console.error("恢复检查点失败:",$)}e.currentScene&&this.updateSceneHistory(e.currentScene);const a=e.currentSceneId+1;if(a>this.storyStructure.totalScenes)return this.generateEnding(e.storyProgress);const c=this.storyStructure.keyScenes[a],p=!!c,m=[{role:"system",content:`${this.characterBackground}

【剧情进度】当前是第${a}/${this.storyStructure.totalScenes}个场景
${p?`【关键场景】${c.title} - ${c.description}`:"【日常场景】根据玩家选择自然发展"}

【结局导向】根据当前数值趋势：
- 学习值: ${e.storyProgress.mainQuests.study}
- 游戏值: ${e.storyProgress.mainQuests.gaming}
- 社交值: ${e.storyProgress.mainQuests.social}

请确保场景推进符合剧情节奏，为最终结局做铺垫。`},{role:"user",content:`玩家选择了: "${e.choiceText}"。请为"最强剑魔是高三生"游戏生成第${a}个场景。

          请以JSON格式返回以下内容：
          1. description: 场景描述 (200字以内)
          2. dialog: 主角内心独白或对话 (50字以内)
          3. options: 3个选项，每个包含text(文本)、hint(提示)、next(下一场景ID)
          4. specialEvent: 特殊事件 (可选)

          注意考虑当前游戏进度：gaming=${e.storyProgress.mainQuests.gaming}, study=${e.storyProgress.mainQuests.study}, social=${e.storyProgress.mainQuests.social}`}];if((s=e.streamCallbacks)!=null&&s.onReasoningUpdate||(n=e.streamCallbacks)!=null&&n.onDialogUpdate){const k=await this.createModel().streamText({messages:m});let w="",v="";for await(let f of k.dataStream){const E=(o=(i=(t=f==null?void 0:f.choices)==null?void 0:t[0])==null?void 0:i.delta)==null?void 0:o.reasoning_content;E&&((r=e.streamCallbacks)!=null&&r.onReasoningUpdate)&&(v+=E,e.streamCallbacks.onReasoningUpdate(E));const M=(l=(y=(d=f==null?void 0:f.choices)==null?void 0:d[0])==null?void 0:y.delta)==null?void 0:l.content;M&&(w+=M,(g=e.streamCallbacks)!=null&&g.onDialogUpdate&&e.streamCallbacks.onDialogUpdate(M))}const b=this.parseResponse(w,e.currentSceneId+1);v&&(b.reasoning=v);try{const f=await I.saveCheckpoint(b);f&&(b.checkpointId=f)}catch(f){console.error("保存检查点失败:",f)}return b}else{const $=await this.sendRequest(m),k=this.parseResponse($.choices[0].message.content,e.currentSceneId+1);try{const w=await I.saveCheckpoint(k);w&&(k.checkpointId=w)}catch(w){console.error("保存检查点失败:",w)}return k}}catch(a){throw console.error("生成场景失败:",a),a}}static generateEnding(e){let s="balanced",n=this.storyStructure.endings.balanced;this.storyStructure.endings.academic.condition(e)?(s="academic",n=this.storyStructure.endings.academic):this.storyStructure.endings.gaming.condition(e)&&(s="gaming",n=this.storyStructure.endings.gaming);const i={academic:{description:"高考结束了，小明放下了游戏，全身心投入学习。经过几个月的努力，他收到了心仪大学的录取通知书。虽然告别了游戏主播的身份，但他在学术道路上找到了新的目标。",dialog:"虽然放弃了游戏，但我在学习中找到了新的成就感。这条路或许更适合我。",options:[]},gaming:{description:"小明坚持了自己的游戏梦想，最终收到了职业电竞俱乐部的正式邀请。虽然学业成绩不理想，但他在电竞道路上闯出了自己的天地，成为了真正的'最强剑魔'。",dialog:"我证明了自己！游戏不只是游戏，它也可以成为我的事业和梦想！",options:[]},balanced:{description:"小明找到了学习和游戏的平衡点。他既保持了不错的学习成绩，也在游戏上有所成就。虽然不是最顶尖的，但他过得很充实，朋友们都很羡慕他的生活状态。",dialog:"原来学习和游戏并不是对立的，关键是要找到平衡。我很满意现在的生活。",options:[]}}[s];return{id:999,image:`https://source.unsplash.com/800x500/?graduation,success,achievement&t=${Date.now()}`,description:i.description,dialog:i.dialog,options:[],context:{mood:"满足",location:"人生新阶段",timeOfDay:"未来",previousEvents:[`获得了${n.name}结局`]}}}static getMoodBasedOnProgress(e){const{gaming:s,study:n,social:t}=e.mainQuests;return s>80?"自信":n>80?"充实":t>80?"开心":s<20&&n<20?"迷茫":s>60&&n<30?"焦虑":n>60&&s<30?"压抑":"平静"}static getNextSceneType(e,s,n){const t=new Set;if(e.split(/\s+/).forEach(i=>t.add(i)),s==null||s.split(/\s+/).forEach(i=>t.add(i)),n){const{gaming:i,study:o,social:r}=n.mainQuests;if(i<30&&t.has("游戏")){const d=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(d)}if(o<30&&t.has("学习")){const d=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(d)}if(r<30&&(t.has("社交")||t.has("朋友"))){const d=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(d)}for(const[d,y]of Object.entries(n.relationships))if(y.affinity<-20&&Math.random()<.3)return d==="李雪"?"社交互动":"课堂学习"}if(t.has("游戏")||t.has("直播")){const i=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(i)}else if(t.has("学习")||t.has("考试")){const i=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(i)}else if(t.has("社交")||t.has("朋友")){const i=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(i)}return this.getRandomUnusedScene(this.sceneTypes)}static getNextSpecialEvent(e){if(Math.random()<=.7)return;if(e){const{gaming:t,study:i,social:o}=e.mainQuests;if(t>70&&Math.random()<.4){const r=["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）"];return r[Math.floor(Math.random()*r.length)]}if(i<30&&Math.random()<.4){const r=["王老师突袭（被抓打游戏）","高考倒计时（压力事件）","家长谈话（成绩下滑）"];return r[Math.floor(Math.random()*r.length)]}for(const[r,d]of Object.entries(e.relationships))if(d.affinity>50&&Math.random()<.3)return r==="李雪"?"偶遇李雪（暗恋对象）":void 0}const s=this.specialEvents.filter(t=>!this.usedSpecialEvents.has(t));if(s.length===0)return this.usedSpecialEvents.clear(),this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)];const n=s[Math.floor(Math.random()*s.length)];return this.usedSpecialEvents.add(n),n}static getDialogueType(e,s){return e.includes("游戏")||e.includes("直播")?"gaming":e.includes("社交")||e.includes("感情")?"relationship":e.includes("生活")||e.includes("思考")?"life":"advice"}static getRandomUnusedScene(e){const s=this.sceneHistory.slice(-3).map(t=>t.type),n=e.filter(t=>!s.includes(t));return n.length===0?e[Math.floor(Math.random()*e.length)]:n[Math.floor(Math.random()*n.length)]}static formatSceneHistory(){return this.sceneHistory.slice(-3).map((e,s)=>`场景${s+1}:
类型: ${e.type}
描述: ${e.description}
对话: ${e.dialog}`).join(`

`)}static updateSceneHistory(e){this.sceneHistory.push({type:this.getSceneTypeFromDescription(e.description),description:e.description,dialog:e.dialog}),this.sceneHistory.length>10&&this.sceneHistory.shift()}static getSceneTypeFromDescription(e){for(const s of this.sceneTypes)if(e.includes(s))return s;return"日常生活"}static parseResponse(e,s){var n;try{console.log("解析响应内容:",e);let t=e;const i=e.match(/```(?:json)?\s*([\s\S]*?)\s*```/);i&&i[1]&&(t=i[1],console.log("从代码块中提取的JSON:",t)),t=t.replace(/[\u0000-\u001F\u007F-\u009F]/g,"").replace(/:\s*\+(\d+)/g,": $1").replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/([{,]\s*)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}0-9true false][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2').replace(/:\s*(true|false|null)(\s*[,}])/g,': "$1"$2').replace(/:\s*(\d+)(\s*[,}])/g,": $1$2").replace(/"\s*:\s*"/g,'":"').replace(/"\s*,\s*"/g,'","').replace(/}\s*{/g,"},{").replace(/]\s*\[/g,"],["),console.log("清理后的JSON内容:",t);let o;try{o=JSON.parse(t),console.log("成功解析JSON:",o)}catch(l){console.error("JSON解析失败，错误:",l);try{if(t=t.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",").replace(/([{,][^,{]*?)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2').replace(/:\s*(true|false)(\s*[,}])/g,':"$1"$2').replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/([{,]\s*)"([^"]+)"\s*:\s*"([^"]*)"\s*([,}])/g,'$1"$2":"$3"$4'),console.log("JSON内容前30个字符:",t.substring(0,30)),t.length>=30){const g=t.charAt(19),a=t.charAt(20),c=t.charAt(21);if(console.log(`字符位置19-21: "${g}${a}${c}"`),g==='"'&&a!==":"&&a!==","&&a!=="}"&&(console.log("检测到位置20缺少逗号，添加逗号"),t=t.substring(0,20)+","+t.substring(20)),g===":"&&!a.match(/[\s",\d\[\{]/)){console.log("检测到位置20缺少值引号，添加引号"),t=t.substring(0,20)+'"'+t.substring(20);const m=t.substring(20).search(/[,\}]/);m>0&&(t=t.substring(0,20+m)+'"'+t.substring(20+m))}const p=t.substring(0,20).lastIndexOf('"');if(p>=0&&!t.substring(p+1,25).includes('"')){let m=t.substring(20).search(/[,\}]/);m>0&&(console.log("检测到缺少闭合引号，添加引号"),t=t.substring(0,20+m)+'"'+t.substring(20+m))}}t.startsWith("{")&&!t.endsWith("}")&&(console.log("检测到缺少结束大括号，添加结束大括号"),t=t+"}"),console.log("清理后的JSON内容:",t);try{o=JSON.parse(t),console.log("成功解析修复后的JSON")}catch(g){console.error("仍解析失败:",g),console.log("尝试使用更通用的错误修复...");let a="{";const c=/"([^"]+)"\s*:\s*("[^"]*"|[0-9]+|true|false|\{.*?\}|\[.*?\])/g;let p,m=0;for(;(p=c.exec(t))!==null;)m>0&&(a+=","),a+=`"${p[1]}":${p[2]}`,m++;a+="}",console.log("构造的有效JSON:",a);try{o=JSON.parse(a),console.log("成功解析重构的JSON")}catch{console.error("无法修复JSON，尝试从原始内容提取信息"),console.log("原始内容:",e);let k="小明继续他的高中生活，在游戏与学习之间寻找平衡。",w="我需要做出选择...";const v=e.match(/描述[：:]\s*([^。！？\n]{10,100}[。！？]?)/);v&&(k=v[1].trim());const b=e.match(/对话[：:]?\s*["""]([^"""]{5,50})["""]?/);if(b&&(w=b[1].trim()),k==="小明继续他的高中生活，在游戏与学习之间寻找平衡。"){const f=e.match(/[。！？]\s*([^。！？\n]{20,150}[。！？])/);f&&(k=f[1].trim())}o={description:k,dialog:w,options:[],context:{mood:"困惑",location:"当前位置",timeOfDay:"现在",previousEvents:["JSON解析失败，已提取文本内容"]}}}}}catch(g){console.error("更激进清理后仍解析失败:",g);let a="小明站在教室里，思考着接下来该怎么办。阳光透过窗户洒在桌面上，同学们各自忙着自己的事情。",c="让我想想下一步该怎么做...";const p=e.match(/场景[描述]*[：:]\s*([^。！？\n]{15,200}[。！？]?)/);if(p)a=p[1].trim();else{const $=e.match(/([^。！？\n]{30,200}[。！？])/);$&&(a=$[1].trim())}const m=e.match(/[对话内心独白][：:]?\s*["""]?([^"""。！？\n]{5,80})["""。！？]?/);m&&(c=m[1].trim()),o={description:a,dialog:c,options:[{text:"继续探索",hint:"看看周围的情况",impact:{quest:{type:"social",value:3},relationship:{character:"李雪",value:0}}},{text:"重新思考",hint:"仔细考虑下一步",impact:{quest:{type:"study",value:3},relationship:{character:"李雪",value:0}}}],context:{mood:"思考",location:"当前位置",timeOfDay:"现在",previousEvents:["已从文本内容中提取场景信息"]}}}}(!o.description||typeof o.description!="string")&&(console.warn("缺少场景描述或格式不正确，使用默认描述"),o.description="小明站在教室里，思考着下一步该怎么做。周围的同学们各忙各的，有人看书，有人聊天，还有人偷偷玩手机。"),(!o.dialog||typeof o.dialog!="string")&&(console.warn("缺少对话内容或格式不正确，使用默认对话"),o.dialog="我该怎么选择呢？游戏和学习，这是个问题..."),Array.isArray(o.options)||(console.warn("缺少选项或格式不正确，使用默认选项"),o.options=[]);const r=new Set,d=[];for(let l=0;l<o.options.length;l++){const g=o.options[l];let a=g.text||`选项${l+1}`,c=1,p=a;for(;r.has(a);)a=`${p}${c}`,c++;r.add(a),d.push({...g,text:a})}for(o.options=d;o.options.length<2;){const l=["study","gaming","social"],g=l[o.options.length%l.length],a=["专注于学习","打会游戏放松","和朋友聊天"],c=["提高成绩是当务之急","游戏也很重要","社交也不能忽视"];o.options.push({text:a[o.options.length]||`选择${o.options.length+1}`,hint:c[o.options.length]||"这是一个选择",impact:{quest:{type:g,value:5},relationship:{character:"李雪",value:0}}})}return{id:s,image:`https://source.unsplash.com/800x500/?${this.getImageKeywords(o.description)}&t=${Date.now()}`,description:o.description.slice(0,300),dialog:o.dialog.slice(0,80),options:o.options.slice(0,3).map((l,g)=>{const a=["gaming","study","social"],c=(l.text||"继续探索").toLowerCase();let p=a[g%a.length];return c.includes("游戏")||c.includes("打")||c.includes("剑魔")||c.includes("技能")||c.includes("排位")?p="gaming":c.includes("学习")||c.includes("考试")||c.includes("上课")||c.includes("听讲")||c.includes("作业")?p="study":(c.includes("朋友")||c.includes("聊天")||c.includes("交流")||c.includes("李雪")||c.includes("关系"))&&(p="social"),{text:(l.text||"继续探索").slice(0,20),next:-1,hint:(l.hint||"看看接下来会发生什么").slice(0,30),impact:l.impact||{quest:{type:p,value:5},relationship:{character:"李雪",value:0}}}}),isAIGenerated:!0,specialEvent:(n=o.specialEvent)==null?void 0:n.slice(0,50),context:o.context||{mood:"平静",location:"教室",timeOfDay:"上午",previousEvents:[]},reasoning:o.reasoning}}catch(t){console.error("解析响应失败:",t),console.error("原始内容:",e);let i="小明继续他的高中生活，在这个充满挑战的环境中寻找属于自己的道路。教室里的氛围很安静，每个人都在专注于自己的事情。",o="我需要仔细考虑下一步该怎么做...";try{const r=[/场景[描述]*[：:]\s*([^。！？\n]{20,300}[。！？]?)/,/描述[：:]\s*([^。！？\n]{20,300}[。！？]?)/,/([^。！？\n]*小明[^。！？\n]{20,200}[。！？])/,/([^。！？\n]{40,300}[。！？])/];for(const y of r){const l=e.match(y);if(l&&l[1]&&l[1].length>20){i=l[1].trim();break}}const d=[/[对话内心独白][：:]?\s*["""]([^"""]{5,100})["""]?/,/["""]([^"""]{10,80})["""]?/];for(const y of d){const l=e.match(y);if(l&&l[1]&&l[1].length>5){o=l[1].trim();break}}}catch(r){console.error("提取内容失败:",r)}return{id:s,image:"https://source.unsplash.com/800x500/?classroom,student&t="+Date.now(),description:i,dialog:o,options:[{text:"继续前进",next:-1,hint:"勇敢面对挑战",impact:{quest:{type:"gaming",value:5},relationship:{character:"李雪",value:1}}},{text:"仔细观察",next:-1,hint:"了解当前情况",impact:{quest:{type:"study",value:5},relationship:{character:"王老师",value:1}}},{text:"与他人交流",next:-1,hint:"寻求帮助或建议",impact:{quest:{type:"social",value:5},relationship:{character:"李雪",value:2}}}],isAIGenerated:!0,context:{mood:"专注",location:"教室",timeOfDay:"现在",previousEvents:["已从AI响应中提取场景内容"]}}}}static getImageKeywords(e){const s=new Set;return s.add("chinese"),s.add("student"),(e.includes("游戏")||e.includes("直播"))&&(s.add("gaming"),s.add("computer")),(e.includes("学习")||e.includes("考试"))&&(s.add("classroom"),s.add("study")),(e.includes("社交")||e.includes("朋友"))&&(s.add("friends"),s.add("people")),Array.from(s).slice(0,3).join(",")}}S(x,"sceneHistory",[]),S(x,"usedSpecialEvents",new Set),S(x,"storyStructure",{totalScenes:10,keyScenes:{1:{type:"开场",title:"新学期的开始",description:"高三开学，小明面临学习和游戏的选择"},2:{type:"日常",title:"课堂风波",description:"上课时想着游戏被老师发现"},3:{type:"冲突",title:"家长会风暴",description:"家长发现游戏成绩，爆发激烈冲突"},4:{type:"抉择",title:"深夜的思考",description:"面临是否放弃游戏的重大选择"},5:{type:"转折",title:"意外的机会",description:"收到电竞俱乐部邀请或重要考试机会"},6:{type:"挑战",title:"双重压力",description:"同时面临游戏比赛和重要考试"},7:{type:"危机",title:"关键时刻",description:"必须在游戏和学习中做出最终选择"},8:{type:"高潮",title:"决战时刻",description:"面临人生最重要的考验"},9:{type:"结果",title:"尘埃落定",description:"选择的结果开始显现"},10:{type:"结局",title:"新的开始",description:"根据之前选择走向不同结局"}},endings:{academic:{name:"学霸之路",condition:e=>e.mainQuests.study>=70&&e.mainQuests.gaming<=30,description:"放下游戏专心学习，最终考上理想大学，成为学霸"},gaming:{name:"电竞传奇",condition:e=>e.mainQuests.gaming>=70&&e.mainQuests.study<=30,description:"坚持游戏梦想，成为职业电竞选手，在赛场上发光发热"},balanced:{name:"平衡人生",condition:e=>e.mainQuests.study>=40&&e.mainQuests.gaming>=40&&e.mainQuests.social>=30,description:"学习游戏两不误，既保持了不错的成绩，也在游戏上有所成就"}}}),S(x,"characterBackground",`角色背景：
- 姓名：小明（游戏ID：最强剑魔）
- 身份：高三学生，知名游戏主播
- 游戏特长：英雄联盟剑魔玩家，连续29天冲击王者失败
- 性格特点：
  1. 游戏时激情四射，现实中是个普通学生
  2. 直播时经常情绪激动导致麦克风爆音
  3. 对游戏有着极强的执着
  4. 对感情和生活有独特见解
- 说话特点：
  1. 游戏相关：
     - "回答我！我Q会不会空？"
     - "这把打完我得了MVP！"
     - "躺赢狗！"
     - "炸麦警告！"
     - "你们可能不知道，我学凯南学得有多像"
  2. 生活感悟：
     - "怎么不找找自己的问题？"
     - "我要采一朵花送给妈妈"
     - "去洗了点阳光青提"
     - "我真的很不明白"
  3. 情感态度：
     - "你很不稳重"
     - "你这三观还是存在点问题"
     - "不要被表面现象所迷惑"
     - "看破不说破，没啥疑不疑惑的"
- 生活环境：
  1. 正在备战高考
  2. 暗恋同学李雪（游戏ID：疯狂打野）
  3. 被班主任王老师重点关注
- 日常挑战：
  1. 平衡学习和游戏时间
  2. 控制直播时的情绪
  3. 处理同学和粉丝关系
  4. 应对高考压力`),S(x,"sceneTypes",["课堂学习","游戏训练","排位赛","直播现场","考试现场","社交互动","家庭生活","社团活动","比赛解说","粉丝互动","感情困惑","人生思考"]),S(x,"specialEvents",["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）","偶遇李雪（暗恋对象）","王老师突袭（被抓打游戏）","高考倒计时（压力事件）","粉丝认出（身份暴露）","网络卡顿（比赛掉线）","家长谈话（成绩下滑）","赛事解说（受邀解说）","感情困惑（对话选择）","人生思考（价值观碰撞）"]),S(x,"classicQuotes",["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像","我要抽陀螺了！","怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白","你很不稳重","你这三观还是存在点问题","你越大度你对另一半就是不负责的表现","如果要谈你这个年纪就要考虑下半辈子","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的","你俩能聊就聊","你管她干哈","你俩成不成都不好说","漂亮的玩的花","想这么多干啥","这不是很正常的行为吗","我等会就要骂你了","逆天言论","你真是人才","我干了","既然跟你谈了你们就要自己有边界感","能不能听进去我说的","我只能管好我自己","你不是在找个合作租房的室友，你是在找个可以一起面对生活互相扶持的伴侣"]),S(x,"dialogueTypes",{gaming:["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像"],life:["怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白"],relationship:["你很不稳重","你这三观还是存在点问题","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的"],advice:["你俩能聊就聊","你管她干哈","想这么多干啥","这不是很正常的行为吗"]});export{u as A,I as C,x as D,D as a,U as u};
