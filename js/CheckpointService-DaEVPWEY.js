var h=Object.defineProperty;var l=(o,t,e)=>t in o?h(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>l(o,typeof t!="symbol"?t+"":t,e);import{d as p}from"./pinia-B-GcKEsP.js";const d=p("api",{state:()=>({apiUrl:localStorage.getItem("apiUrl")||"http://106.14.176.242:9998/v1/chat/completions",apiKey:localStorage.getItem("apiKey")||"",modelName:localStorage.getItem("modelName")||"QwQ-32B"}),actions:{setApiUrl(o){this.apiUrl=o,localStorage.setItem("apiUrl",o)},setApiKey(o){this.apiKey=o,localStorage.setItem("apiKey",o)},setModelName(o){this.modelName=o,localStorage.setItem("modelName",o)}}});class n{static init(){try{const t=localStorage.getItem(this.STORAGE_KEY);if(t){const e=JSON.parse(t);this.checkpoints=new Map(Object.entries(e));const s=Date.now();for(const[a,i]of this.checkpoints.entries())s-i.timestamp>24*60*60*1e3&&this.checkpoints.delete(a);this.saveToStorage()}}catch(t){console.error("初始化检查点服务失败:",t),this.checkpoints.clear()}}static create(t){const e=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(e,{timestamp:Date.now(),...t}),e}static get(t){return this.checkpoints.get(t)}static getLatest(){return Array.from(this.checkpoints.values()).sort((e,s)=>s.timestamp-e.timestamp)[0]}static delete(t){this.checkpoints.delete(t),this.saveToStorage()}static clear(){this.checkpoints.clear(),this.saveToStorage()}static saveToStorage(){try{const t=Object.fromEntries(this.checkpoints);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(t))}catch(t){console.error("保存检查点失败:",t)}}static generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}static async saveCheckpoint(t){const e=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(e,{timestamp:Date.now(),scene:t}),console.log("已创建检查点:",e),e}static async loadCheckpoint(t){const e=this.checkpoints.get(t);return e?(console.log("已加载检查点:",t),e.scene):(console.log("检查点不存在:",t),null)}static cleanupExpiredCheckpoints(t=60){const e=Date.now(),s=t*60*1e3;let a=0;this.checkpoints.forEach((i,r)=>{e-i.timestamp>s&&(this.checkpoints.delete(r),a++)}),a>0&&console.log(`已清除 ${a} 个过期检查点`)}}c(n,"STORAGE_KEY","game_checkpoints"),c(n,"MAX_CHECKPOINTS",5),c(n,"checkpoints",new Map);export{n as C,d as u};
