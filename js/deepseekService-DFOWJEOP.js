var x=Object.defineProperty;var E=(r,e,s)=>e in r?x(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var f=(r,e,s)=>E(r,typeof e!="symbol"?e+"":e,s);import{d as M}from"./pinia-BGq-fEY2.js";const A=M("api",{state:()=>({apiUrl:localStorage.getItem("apiUrl")||"",apiKey:localStorage.getItem("apiKey")||"",modelName:localStorage.getItem("modelName")||"deepseek-ai/DeepSeek-R1-Distill-Qwen-7B"}),actions:{setApiUrl(r){this.apiUrl=r,localStorage.setItem("apiUrl",r)},setApiKey(r){this.apiKey=r,localStorage.setItem("apiKey",r)},setModelName(r){this.modelName=r,localStorage.setItem("modelName",r)}}});class k{static init(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(e){const s=JSON.parse(e);this.checkpoints=new Map(Object.entries(s));const n=Date.now();for(const[t,a]of this.checkpoints.entries())n-a.timestamp>24*60*60*1e3&&this.checkpoints.delete(t);this.saveToStorage()}}catch(e){console.error("初始化检查点服务失败:",e),this.checkpoints.clear()}}static create(e){const s=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(s,{timestamp:Date.now(),...e}),s}static get(e){return this.checkpoints.get(e)}static getLatest(){return Array.from(this.checkpoints.values()).sort((s,n)=>n.timestamp-s.timestamp)[0]}static delete(e){this.checkpoints.delete(e),this.saveToStorage()}static clear(){this.checkpoints.clear(),this.saveToStorage()}static saveToStorage(){try{const e=Object.fromEntries(this.checkpoints);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e))}catch(e){console.error("保存检查点失败:",e)}}static generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}static async saveCheckpoint(e){const s=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(s,{timestamp:Date.now(),scene:e}),console.log("已创建检查点:",s),s}static async loadCheckpoint(e){const s=this.checkpoints.get(e);return s?(console.log("已加载检查点:",e),s.scene):(console.log("检查点不存在:",e),null)}static cleanupExpiredCheckpoints(e=60){const s=Date.now(),n=e*60*1e3;let t=0;this.checkpoints.forEach((a,o)=>{s-a.timestamp>n&&(this.checkpoints.delete(o),t++)}),t>0&&console.log(`已清除 ${t} 个过期检查点`)}}f(k,"STORAGE_KEY","game_checkpoints"),f(k,"MAX_CHECKPOINTS",5),f(k,"checkpoints",new Map);const d={apiKey:localStorage.getItem("apiKey")||"sk-etybbrewlaafxjjqtlgfeqaaskzrmryfndjtjjecyixbsznw",baseUrl:localStorage.getItem("apiUrl")||"https://api.siliconflow.cn/v1/chat/completions",model:localStorage.getItem("modelName")||"",temperature:.8,maxTokens:2e3};function T(r){Object.assign(d,r),r.apiKey&&localStorage.setItem("apiKey",r.apiKey),r.baseUrl&&localStorage.setItem("apiUrl",r.baseUrl),r.model&&localStorage.setItem("modelName",r.model)}class S{static setModelVersion(e){e==="r1"?(d.model="deepseek-r1",console.log("已切换到DeepSeek-R1模型")):e==="v3"?(d.model="deepseek-chat",console.log("已切换到DeepSeek-Chat模型")):console.error("不支持的模型版本:",e)}static getModelVersion(){return d.model==="deepseek-chat"?"v3":"r1"}static async sendRequest(e){var s,n,t;try{if(console.log("发送请求到Deepseek API..."),console.log("使用模型:",d.model),console.log("API地址:",d.baseUrl),!d.baseUrl||!d.baseUrl.startsWith("http"))throw new Error("无效的API地址: "+d.baseUrl);const a={model:d.model,messages:e,temperature:d.temperature,max_tokens:d.maxTokens,stream:!1,stop:null};console.log("请求体:",JSON.stringify(a,null,2));const o=await fetch(d.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${d.apiKey}`},body:JSON.stringify(a)});if(!o.ok){const i=await o.text();throw console.error("API错误响应:",i),new Error(`API请求失败: ${o.status} - ${i}`)}const c=await o.json();if(console.log("API响应:",c),!((t=(n=(s=c.choices)==null?void 0:s[0])==null?void 0:n.message)!=null&&t.content))throw console.error("API响应格式异常:",c),new Error("API响应格式不正确: "+JSON.stringify(c));return c}catch(a){throw console.error("API请求失败:",a),a}}static async generateInitialScene(){const e=this.sceneTypes[Math.floor(Math.random()*this.sceneTypes.length)],s=Math.random()>.7?this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)]:void 0,n=`请以第一人称的视角，扮演小明（最强剑魔）生成游戏开场场景。

${this.characterBackground}

场景类型：${e}
${s?`特殊事件：${s}`:""}

要求：
1. 场景描述要生动有趣，突出高中生活和游戏双重身份的冲突
2. 对话要用小明的语气，多用游戏梗和台词
3. 描述要有细节，包括天气、环境、人物心情等
4. 选项要有趣且符合人物性格
5. 如果有特殊事件，要自然地融入场景中

输出格式：
{
  "description": "场景描述（200字以内）",
  "dialog": "小明的对话（50字以内）",
  "options": [
    {"text": "选项1（15字以内）", "hint": "选项提示（20字以内）"},
    {"text": "选项2（15字以内）", "hint": "选项提示（20字以内）"}
  ],
  "specialEvent": "特殊事件的具体描述（可选，50字以内）"
}`;try{const t=[{role:"system",content:"你现在是小明（游戏ID：最强剑魔），一个高三学生兼游戏主播。你要生动地讲述在学习和游戏之间的故事。确保输出是合法的JSON格式。"},{role:"user",content:n}],o=(await this.sendRequest(t)).choices[0].message.content;return this.parseResponse(o,1)}catch(t){throw console.error("生成初始场景失败:",t),t}}static createModel(e={}){return{streamText:async({messages:s,model:n=d.model,temperature:t=d.temperature,max_tokens:a=d.maxTokens})=>{console.log("使用模型:",n);try{const o=await fetch(d.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${d.apiKey}`},body:JSON.stringify({model:n,messages:s,temperature:t,max_tokens:a,stream:!0})});if(!o.ok){const c=await o.text();throw new Error(`API响应错误 ${o.status}: ${c}`)}return{dataStream:this._createAsyncIterator(o)}}catch(o){throw console.error("流式请求失败:",o),o}}}}static async*_createAsyncIterator(e){if(!e.body)throw new Error("响应没有可读的正文");const s=e.body.getReader(),n=new TextDecoder;let t="";try{for(;;){const{done:a,value:o}=await s.read();if(a)break;t+=n.decode(o,{stream:!0});const c=t.split(`
`);t=c.pop()||"";for(const i of c)if(i.trim()!==""&&i.trim()!=="data: [DONE]"&&i.startsWith("data: "))try{yield JSON.parse(i.substring(5))}catch(h){console.error("解析流数据时出错:",h,"Line:",i)}}}finally{s.releaseLock()}}static async generateScene(e){var s,n,t,a,o,c,i,h,p,l;try{if(e.checkpointId)try{const u=await k.loadCheckpoint(e.checkpointId);if(u)return console.log("已从检查点恢复场景:",e.checkpointId),u}catch(u){console.error("恢复检查点失败:",u)}e.currentScene&&this.updateSceneHistory(e.currentScene);const g=[{role:"system",content:this.characterBackground},{role:"user",content:`玩家选择了: "${e.choiceText}"。请为"最强剑魔是高三生"游戏生成下一个场景，场景ID ${e.currentSceneId+1}。

          请以JSON格式返回以下内容：
          1. description: 场景描述 (200字以内)
          2. dialog: 主角内心独白或对话 (50字以内)
          3. options: 3个选项，每个包含text(文本)、hint(提示)、next(下一场景ID)
          4. specialEvent: 特殊事件 (可选)

          注意考虑当前游戏进度：gaming=${e.storyProgress.mainQuests.gaming}, study=${e.storyProgress.mainQuests.study}, social=${e.storyProgress.mainQuests.social}`}];if((s=e.streamCallbacks)!=null&&s.onReasoningUpdate||(n=e.streamCallbacks)!=null&&n.onDialogUpdate){const w=await this.createModel().streamText({messages:g});let y="",v="";for await(let m of w.dataStream){const $=(o=(a=(t=m==null?void 0:m.choices)==null?void 0:t[0])==null?void 0:a.delta)==null?void 0:o.reasoning_content;$&&((c=e.streamCallbacks)!=null&&c.onReasoningUpdate)&&(v+=$,e.streamCallbacks.onReasoningUpdate($));const b=(p=(h=(i=m==null?void 0:m.choices)==null?void 0:i[0])==null?void 0:h.delta)==null?void 0:p.content;b&&(y+=b,(l=e.streamCallbacks)!=null&&l.onDialogUpdate&&e.streamCallbacks.onDialogUpdate(b))}const I=this.parseResponse(y,e.currentSceneId+1);v&&(I.reasoning=v);try{const m=await k.saveCheckpoint(I);m&&(I.checkpointId=m)}catch(m){console.error("保存检查点失败:",m)}return I}else{const u=await this.sendRequest(g),w=this.parseResponse(u.choices[0].message.content,e.currentSceneId+1);try{const y=await k.saveCheckpoint(w);y&&(w.checkpointId=y)}catch(y){console.error("保存检查点失败:",y)}return w}}catch(g){throw console.error("生成场景失败:",g),g}}static getMoodBasedOnProgress(e){const{gaming:s,study:n,social:t}=e.mainQuests;return s>80?"自信":n>80?"充实":t>80?"开心":s<20&&n<20?"迷茫":s>60&&n<30?"焦虑":n>60&&s<30?"压抑":"平静"}static getNextSceneType(e,s,n){const t=new Set;if(e.split(/\s+/).forEach(a=>t.add(a)),s==null||s.split(/\s+/).forEach(a=>t.add(a)),n){const{gaming:a,study:o,social:c}=n.mainQuests;if(a<30&&t.has("游戏")){const i=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(i)}if(o<30&&t.has("学习")){const i=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(i)}if(c<30&&(t.has("社交")||t.has("朋友"))){const i=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(i)}for(const[i,h]of Object.entries(n.relationships))if(h.affinity<-20&&Math.random()<.3)return i==="李雪"?"社交互动":"课堂学习"}if(t.has("游戏")||t.has("直播")){const a=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(a)}else if(t.has("学习")||t.has("考试")){const a=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(a)}else if(t.has("社交")||t.has("朋友")){const a=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(a)}return this.getRandomUnusedScene(this.sceneTypes)}static getNextSpecialEvent(e){if(Math.random()<=.7)return;if(e){const{gaming:t,study:a,social:o}=e.mainQuests;if(t>70&&Math.random()<.4){const c=["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）"];return c[Math.floor(Math.random()*c.length)]}if(a<30&&Math.random()<.4){const c=["王老师突袭（被抓打游戏）","高考倒计时（压力事件）","家长谈话（成绩下滑）"];return c[Math.floor(Math.random()*c.length)]}for(const[c,i]of Object.entries(e.relationships))if(i.affinity>50&&Math.random()<.3)return c==="李雪"?"偶遇李雪（暗恋对象）":void 0}const s=this.specialEvents.filter(t=>!this.usedSpecialEvents.has(t));if(s.length===0)return this.usedSpecialEvents.clear(),this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)];const n=s[Math.floor(Math.random()*s.length)];return this.usedSpecialEvents.add(n),n}static getDialogueType(e,s){return e.includes("游戏")||e.includes("直播")?"gaming":e.includes("社交")||e.includes("感情")?"relationship":e.includes("生活")||e.includes("思考")?"life":"advice"}static getRandomUnusedScene(e){const s=this.sceneHistory.slice(-3).map(t=>t.type),n=e.filter(t=>!s.includes(t));return n.length===0?e[Math.floor(Math.random()*e.length)]:n[Math.floor(Math.random()*n.length)]}static formatSceneHistory(){return this.sceneHistory.slice(-3).map((e,s)=>`场景${s+1}:
类型: ${e.type}
描述: ${e.description}
对话: ${e.dialog}`).join(`

`)}static updateSceneHistory(e){this.sceneHistory.push({type:this.getSceneTypeFromDescription(e.description),description:e.description,dialog:e.dialog}),this.sceneHistory.length>10&&this.sceneHistory.shift()}static getSceneTypeFromDescription(e){for(const s of this.sceneTypes)if(e.includes(s))return s;return"日常生活"}static parseResponse(e,s){var n;try{console.log("解析响应内容:",e);let t=e;const a=e.match(/```(?:json)?\s*([\s\S]*?)\s*```/);a&&a[1]&&(t=a[1],console.log("从代码块中提取的JSON:",t)),t=t.replace(/[\u0000-\u001F\u007F-\u009F]/g,"").replace(/:\s*\+(\d+)/g,": $1").replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/([{,][^,{]*?)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2'),console.log("清理后的JSON内容:",t);let o;try{o=JSON.parse(t),console.log("成功解析JSON:",o)}catch(i){console.error("JSON解析失败，错误:",i);try{if(t=t.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",").replace(/([{,][^,{]*?)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2').replace(/:\s*(true|false)(\s*[,}])/g,':"$1"$2').replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/([{,]\s*)"([^"]+)"\s*:\s*"([^"]*)"\s*([,}])/g,'$1"$2":"$3"$4'),console.log("JSON内容前30个字符:",t.substring(0,30)),t.length>=30){const h=t.charAt(19),p=t.charAt(20),l=t.charAt(21);if(console.log(`字符位置19-21: "${h}${p}${l}"`),h==='"'&&p!==":"&&p!==","&&p!=="}"&&(console.log("检测到位置20缺少逗号，添加逗号"),t=t.substring(0,20)+","+t.substring(20)),h===":"&&!p.match(/[\s",\d\[\{]/)){console.log("检测到位置20缺少值引号，添加引号"),t=t.substring(0,20)+'"'+t.substring(20);const u=t.substring(20).search(/[,\}]/);u>0&&(t=t.substring(0,20+u)+'"'+t.substring(20+u))}const g=t.substring(0,20).lastIndexOf('"');if(g>=0&&!t.substring(g+1,25).includes('"')){let u=t.substring(20).search(/[,\}]/);u>0&&(console.log("检测到缺少闭合引号，添加引号"),t=t.substring(0,20+u)+'"'+t.substring(20+u))}}t.startsWith("{")&&!t.endsWith("}")&&(console.log("检测到缺少结束大括号，添加结束大括号"),t=t+"}"),console.log("清理后的JSON内容:",t);try{o=JSON.parse(t),console.log("成功解析修复后的JSON")}catch(h){console.error("仍解析失败:",h),console.log("尝试使用更通用的错误修复...");let p="{";const l=/"([^"]+)"\s*:\s*("[^"]*"|[0-9]+|true|false|\{.*?\}|\[.*?\])/g;let g,u=0;for(;(g=l.exec(t))!==null;)u>0&&(p+=","),p+=`"${g[1]}":${g[2]}`,u++;p+="}",console.log("构造的有效JSON:",p);try{o=JSON.parse(p),console.log("成功解析重构的JSON")}catch{console.error("无法修复JSON，使用默认值"),o={description:"由于技术原因，无法加载场景描述",dialog:"系统：发生了一些错误，但我们继续前进吧",options:[],context:{mood:"困惑",location:"未知位置",timeOfDay:"现在",previousEvents:["系统恢复"]}}}}}catch(h){console.error("更激进清理后仍解析失败:",h),o={description:"无法解析场景描述，请尝试选择其他选项",dialog:"（系统错误，无法获取对话）",options:[{text:"继续尝试",hint:"再试一次",impact:{quest:{type:"social",value:1},relationship:{character:"李雪",value:0}}},{text:"返回上一步",hint:"回到上一个选择",impact:{quest:{type:"study",value:1},relationship:{character:"李雪",value:0}}}],context:{mood:"困惑",location:"错误场景",timeOfDay:"现在",previousEvents:["JSON解析错误"]}}}}for((!o.description||typeof o.description!="string")&&(console.warn("缺少场景描述或格式不正确，使用默认描述"),o.description="小明站在教室里，思考着下一步该怎么做。周围的同学们各忙各的，有人看书，有人聊天，还有人偷偷玩手机。"),(!o.dialog||typeof o.dialog!="string")&&(console.warn("缺少对话内容或格式不正确，使用默认对话"),o.dialog="我该怎么选择呢？游戏和学习，这是个问题..."),Array.isArray(o.options)||(console.warn("缺少选项或格式不正确，使用默认选项"),o.options=[]);o.options.length<2;){const i=["study","gaming","social"],h=i[o.options.length%i.length];o.options.push({text:o.options.length===0?"专注于学习":"打会游戏放松",hint:o.options.length===0?"提高成绩是当务之急":"游戏也很重要",impact:{quest:{type:h,value:5},relationship:{character:"李雪",value:0}}})}return{id:s,image:`https://source.unsplash.com/800x500/?${this.getImageKeywords(o.description)}&t=${Date.now()}`,description:o.description.slice(0,300),dialog:o.dialog.slice(0,80),options:o.options.slice(0,3).map((i,h)=>{const p=["gaming","study","social"],l=(i.text||"继续探索").toLowerCase();let g=p[h%p.length];return l.includes("游戏")||l.includes("打")||l.includes("剑魔")||l.includes("技能")||l.includes("排位")?g="gaming":l.includes("学习")||l.includes("考试")||l.includes("上课")||l.includes("听讲")||l.includes("作业")?g="study":(l.includes("朋友")||l.includes("聊天")||l.includes("交流")||l.includes("李雪")||l.includes("关系"))&&(g="social"),{text:(i.text||"继续探索").slice(0,20),next:-1,hint:(i.hint||"看看接下来会发生什么").slice(0,30),impact:i.impact||{quest:{type:g,value:5},relationship:{character:"李雪",value:0}}}}),isAIGenerated:!0,specialEvent:(n=o.specialEvent)==null?void 0:n.slice(0,50),context:o.context||{mood:"平静",location:"教室",timeOfDay:"上午",previousEvents:[]},reasoning:o.reasoning}}catch(t){return console.error("解析响应失败:",t),console.error("原始内容:",e),{id:s,image:"https://source.unsplash.com/800x500/?classroom,error&t="+Date.now(),description:"（系统：由于技术原因，无法生成新场景。）小明站在原地，思考着下一步该怎么办。",dialog:"（让我想想接下来该做什么...）",options:[{text:"重新尝试",next:-1,hint:"再试一次",impact:{quest:{type:"social",value:0},relationship:{character:"李雪",value:0}}},{text:"换个方向",next:-1,hint:"尝试其他选择",impact:{quest:{type:"social",value:0},relationship:{character:"李雪",value:0}}}],isAIGenerated:!0,context:{mood:"困惑",location:"当前位置",timeOfDay:"现在",previousEvents:["系统错误"]}}}}static getImageKeywords(e){const s=new Set;return s.add("chinese"),s.add("student"),(e.includes("游戏")||e.includes("直播"))&&(s.add("gaming"),s.add("computer")),(e.includes("学习")||e.includes("考试"))&&(s.add("classroom"),s.add("study")),(e.includes("社交")||e.includes("朋友"))&&(s.add("friends"),s.add("people")),Array.from(s).slice(0,3).join(",")}}f(S,"sceneHistory",[]),f(S,"usedSpecialEvents",new Set),f(S,"characterBackground",`角色背景：
- 姓名：小明（游戏ID：最强剑魔）
- 身份：高三学生，知名游戏主播
- 游戏特长：英雄联盟剑魔玩家，连续29天冲击王者失败
- 性格特点：
  1. 游戏时激情四射，现实中是个普通学生
  2. 直播时经常情绪激动导致麦克风爆音
  3. 对游戏有着极强的执着
  4. 对感情和生活有独特见解
- 说话特点：
  1. 游戏相关：
     - "回答我！我Q会不会空？"
     - "这把打完我得了MVP！"
     - "躺赢狗！"
     - "炸麦警告！"
     - "你们可能不知道，我学凯南学得有多像"
  2. 生活感悟：
     - "怎么不找找自己的问题？"
     - "我要采一朵花送给妈妈"
     - "去洗了点阳光青提"
     - "我真的很不明白"
  3. 情感态度：
     - "你很不稳重"
     - "你这三观还是存在点问题"
     - "不要被表面现象所迷惑"
     - "看破不说破，没啥疑不疑惑的"
- 生活环境：
  1. 正在备战高考
  2. 暗恋同学李雪（游戏ID：疯狂打野）
  3. 被班主任王老师重点关注
- 日常挑战：
  1. 平衡学习和游戏时间
  2. 控制直播时的情绪
  3. 处理同学和粉丝关系
  4. 应对高考压力`),f(S,"sceneTypes",["课堂学习","游戏训练","排位赛","直播现场","考试现场","社交互动","家庭生活","社团活动","比赛解说","粉丝互动","感情困惑","人生思考"]),f(S,"specialEvents",["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）","偶遇李雪（暗恋对象）","王老师突袭（被抓打游戏）","高考倒计时（压力事件）","粉丝认出（身份暴露）","网络卡顿（比赛掉线）","家长谈话（成绩下滑）","赛事解说（受邀解说）","感情困惑（对话选择）","人生思考（价值观碰撞）"]),f(S,"classicQuotes",["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像","我要抽陀螺了！","怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白","你很不稳重","你这三观还是存在点问题","你越大度你对另一半就是不负责的表现","如果要谈你这个年纪就要考虑下半辈子","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的","你俩能聊就聊","你管她干哈","你俩成不成都不好说","漂亮的玩的花","想这么多干啥","这不是很正常的行为吗","我等会就要骂你了","逆天言论","你真是人才","我干了","既然跟你谈了你们就要自己有边界感","能不能听进去我说的","我只能管好我自己","你不是在找个合作租房的室友，你是在找个可以一起面对生活互相扶持的伴侣"]),f(S,"dialogueTypes",{gaming:["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像"],life:["怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白"],relationship:["你很不稳重","你这三观还是存在点问题","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的"],advice:["你俩能聊就聊","你管她干哈","想这么多干啥","这不是很正常的行为吗"]});export{d as A,k as C,S as D,T as a,A as u};
