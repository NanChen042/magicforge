var v=Object.defineProperty;var E=(u,e,t)=>e in u?v(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var d=(u,e,t)=>E(u,typeof e!="symbol"?e+"":e,t);class S{static init(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(e){const t=JSON.parse(e);this.checkpoints=new Map(Object.entries(t));const n=Date.now();for(const[o,s]of this.checkpoints.entries())n-s.timestamp>24*60*60*1e3&&this.checkpoints.delete(o);this.saveToStorage()}}catch(e){console.error("初始化检查点服务失败:",e),this.checkpoints.clear()}}static create(e){const t=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(t,{timestamp:Date.now(),...e}),t}static get(e){return this.checkpoints.get(e)}static getLatest(){return Array.from(this.checkpoints.values()).sort((t,n)=>n.timestamp-t.timestamp)[0]}static delete(e){this.checkpoints.delete(e),this.saveToStorage()}static clear(){this.checkpoints.clear(),this.saveToStorage()}static saveToStorage(){try{const e=Object.fromEntries(this.checkpoints);localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e))}catch(e){console.error("保存检查点失败:",e)}}static generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}static async saveCheckpoint(e){const t=`cp_${Date.now()}_${Math.floor(Math.random()*1e3)}`;return this.checkpoints.set(t,{timestamp:Date.now(),scene:e}),console.log("已创建检查点:",t),t}static async loadCheckpoint(e){const t=this.checkpoints.get(e);return t?(console.log("已加载检查点:",e),t.scene):(console.log("检查点不存在:",e),null)}static cleanupExpiredCheckpoints(e=60){const t=Date.now(),n=e*60*1e3;let o=0;this.checkpoints.forEach((s,i)=>{t-s.timestamp>n&&(this.checkpoints.delete(i),o++)}),o>0&&console.log(`已清除 ${o} 个过期检查点`)}}d(S,"STORAGE_KEY","game_checkpoints"),d(S,"MAX_CHECKPOINTS",5),d(S,"checkpoints",new Map);const l={apiKey:"eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkMWRjMzFlLWI0ZDAtNDQ4Yi1hNzZmLWIwY2M2M2Q4MTQ5OCJ9.eyJhdWQiOiJ0ZXN0LWFwcDAtOWd5dXBrbWkxMGVkMjY1NCIsImV4cCI6MjUzNDAyMzAwNzk5LCJpYXQiOjE3NDI0MzY1NTIsImF0X2hhc2giOiJVVDF4a1FVd0VmQ0U5MUpVQUdrb2xRIiwicHJvamVjdF9pZCI6InRlc3QtYXBwMC05Z3l1cGttaTEwZWQyNjU0IiwibWV0YSI6eyJwbGF0Zm9ybSI6IkFwaUtleSJ9fQ.iJ2AlVeFSgyUP9K2ntHahG91TXtG57N86MT12UVpca7fWCZJ4Zqox5cdNJ3uj97DZbzN4q6wah0dZgVt_xqNZrMIvQMfgFc0uiA4gZiUOA6lJKgi33voC4dLWxqJ-_dYr_9XuHI6PPWW5Wy70jGotrVrrFFtUdxB0CJR3-mGHmlTemWMlDcIH3Ot7KZloBSTpC4MITr1i3xYSix8hHp_ClSf1ORKqAj7WXyBjwte7YBf8EIzehnlbpN_Z9sSwv8R_W4zcmEKAs_rTnWdTXGSFKLEl7lbHmpH3n5M4iRoGH9x3YVnZ8i8BXRMp6rBj2n2jqaIrcBrDJTd1ECGNF59tA",baseUrl:"https://test-app0-9gyupkmi10ed2654.api.tcloudbasegateway.com/v1/ai/deepseek/v1",model:"QwQ-32B",temperature:.8,maxTokens:2e3};function O(u){Object.assign(l,u)}class y{static setModelVersion(e){e==="r1"?(l.model="deepseek-r1",console.log("已切换到DeepSeek-R1模型")):e==="v3"?(l.model="deepseek-chat",console.log("已切换到DeepSeek-Chat模型")):console.error("不支持的模型版本:",e)}static getModelVersion(){return l.model==="deepseek-chat"?"v3":"r1"}static async sendRequest(e){try{if(console.log("发送请求到Deepseek API..."),console.log("使用模型:",l.model),console.log("API地址:",l.baseUrl),!l.baseUrl||!l.baseUrl.startsWith("http"))throw new Error("无效的API地址: "+l.baseUrl);const t={model:l.model,messages:e,temperature:l.temperature,max_tokens:l.maxTokens,stream:!1,stop:null};console.log("请求体:",JSON.stringify(t,null,2));const n=await fetch(l.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${l.apiKey}`},body:JSON.stringify(t)});if(!n.ok){const s=await n.text();throw console.error("API错误响应:",s),new Error(`API请求失败: ${n.status} - ${s}`)}const o=await n.json();if(console.log("API响应:",o),!o.choices?.[0]?.message?.content)throw console.error("API响应格式异常:",o),new Error("API响应格式不正确: "+JSON.stringify(o));return o}catch(t){throw console.error("API请求失败:",t),t}}static async generateInitialScene(){const e=this.sceneTypes[Math.floor(Math.random()*this.sceneTypes.length)],t=Math.random()>.7?this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)]:void 0,n=`请以第一人称的视角，扮演小明（最强剑魔）生成游戏开场场景。

${this.characterBackground}

场景类型：${e}
${t?`特殊事件：${t}`:""}

要求：
1. 场景描述要生动有趣，突出高中生活和游戏双重身份的冲突
2. 对话要用小明的语气，多用游戏梗和台词
3. 描述要有细节，包括天气、环境、人物心情等
4. 选项要有趣且符合人物性格
5. 如果有特殊事件，要自然地融入场景中

输出格式：
{
  "description": "场景描述（200字以内）",
  "dialog": "小明的对话（50字以内）",
  "options": [
    {"text": "选项1（15字以内）", "hint": "选项提示（20字以内）"},
    {"text": "选项2（15字以内）", "hint": "选项提示（20字以内）"}
  ],
  "specialEvent": "特殊事件的具体描述（可选，50字以内）"
}`;try{const o=[{role:"system",content:"你现在是小明（游戏ID：最强剑魔），一个高三学生兼游戏主播。你要生动地讲述在学习和游戏之间的故事。确保输出是合法的JSON格式。"},{role:"user",content:n}],i=(await this.sendRequest(o)).choices[0].message.content;return this.parseResponse(i,1)}catch(o){throw console.error("生成初始场景失败:",o),o}}static createModel(e={}){return{streamText:async({messages:t,model:n=l.model,temperature:o=l.temperature,max_tokens:s=l.maxTokens})=>{console.log("使用模型:",n);try{const i=await fetch(l.baseUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${l.apiKey}`},body:JSON.stringify({model:n,messages:t,temperature:o,max_tokens:s,stream:!0})});if(!i.ok){const c=await i.text();throw new Error(`API响应错误 ${i.status}: ${c}`)}return{dataStream:this._createAsyncIterator(i)}}catch(i){throw console.error("流式请求失败:",i),i}}}}static async*_createAsyncIterator(e){if(!e.body)throw new Error("响应没有可读的正文");const t=e.body.getReader(),n=new TextDecoder;let o="";try{for(;;){const{done:s,value:i}=await t.read();if(s)break;o+=n.decode(i,{stream:!0});const c=o.split(`
`);o=c.pop()||"";for(const r of c)if(r.trim()!==""&&r.trim()!=="data: [DONE]"&&r.startsWith("data: "))try{yield JSON.parse(r.substring(5))}catch(h){console.error("解析流数据时出错:",h,"Line:",r)}}}finally{t.releaseLock()}}static async generateScene(e){try{if(e.checkpointId)try{const n=await S.loadCheckpoint(e.checkpointId);if(n)return console.log("已从检查点恢复场景:",e.checkpointId),n}catch(n){console.error("恢复检查点失败:",n)}e.currentScene&&this.updateSceneHistory(e.currentScene);const t=[{role:"system",content:this.characterBackground},{role:"user",content:`玩家选择了: "${e.choiceText}"。请为"最强剑魔是高三生"游戏生成下一个场景，场景ID ${e.currentSceneId+1}。

          请以JSON格式返回以下内容：
          1. description: 场景描述 (200字以内)
          2. dialog: 主角内心独白或对话 (50字以内)
          3. options: 3个选项，每个包含text(文本)、hint(提示)、next(下一场景ID)
          4. specialEvent: 特殊事件 (可选)

          注意考虑当前游戏进度：gaming=${e.storyProgress.mainQuests.gaming}, study=${e.storyProgress.mainQuests.study}, social=${e.storyProgress.mainQuests.social}`}];if(e.streamCallbacks?.onReasoningUpdate||e.streamCallbacks?.onDialogUpdate){const o=await this.createModel().streamText({messages:t});let s="",i="";for await(let r of o.dataStream){const h=r?.choices?.[0]?.delta?.reasoning_content;h&&e.streamCallbacks?.onReasoningUpdate&&(i+=h,e.streamCallbacks.onReasoningUpdate(h));const a=r?.choices?.[0]?.delta?.content;a&&(s+=a,e.streamCallbacks?.onDialogUpdate&&e.streamCallbacks.onDialogUpdate(a))}const c=this.parseResponse(s,e.currentSceneId+1);i&&(c.reasoning=i);try{const r=await S.saveCheckpoint(c);r&&(c.checkpointId=r)}catch(r){console.error("保存检查点失败:",r)}return c}else{const n=await this.sendRequest(t),o=this.parseResponse(n.choices[0].message.content,e.currentSceneId+1);try{const s=await S.saveCheckpoint(o);s&&(o.checkpointId=s)}catch(s){console.error("保存检查点失败:",s)}return o}}catch(t){throw console.error("生成场景失败:",t),t}}static getMoodBasedOnProgress(e){const{gaming:t,study:n,social:o}=e.mainQuests;return t>80?"自信":n>80?"充实":o>80?"开心":t<20&&n<20?"迷茫":t>60&&n<30?"焦虑":n>60&&t<30?"压抑":"平静"}static getNextSceneType(e,t,n){const o=new Set;if(e.split(/\s+/).forEach(s=>o.add(s)),t?.split(/\s+/).forEach(s=>o.add(s)),n){const{gaming:s,study:i,social:c}=n.mainQuests;if(s<30&&o.has("游戏")){const r=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(r)}if(i<30&&o.has("学习")){const r=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(r)}if(c<30&&(o.has("社交")||o.has("朋友"))){const r=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(r)}for(const[r,h]of Object.entries(n.relationships))if(h.affinity<-20&&Math.random()<.3)return r==="李雪"?"社交互动":"课堂学习"}if(o.has("游戏")||o.has("直播")){const s=["游戏训练","排位赛","直播现场"];return this.getRandomUnusedScene(s)}else if(o.has("学习")||o.has("考试")){const s=["课堂学习","考试现场","社团活动"];return this.getRandomUnusedScene(s)}else if(o.has("社交")||o.has("朋友")){const s=["社交互动","粉丝互动","感情困惑"];return this.getRandomUnusedScene(s)}return this.getRandomUnusedScene(this.sceneTypes)}static getNextSpecialEvent(e){if(Math.random()<=.7)return;if(e){const{gaming:o,study:s,social:i}=e.mainQuests;if(o>70&&Math.random()<.4){const c=["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）"];return c[Math.floor(Math.random()*c.length)]}if(s<30&&Math.random()<.4){const c=["王老师突袭（被抓打游戏）","高考倒计时（压力事件）","家长谈话（成绩下滑）"];return c[Math.floor(Math.random()*c.length)]}for(const[c,r]of Object.entries(e.relationships))if(r.affinity>50&&Math.random()<.3)return c==="李雪"?"偶遇李雪（暗恋对象）":void 0}const t=this.specialEvents.filter(o=>!this.usedSpecialEvents.has(o));if(t.length===0)return this.usedSpecialEvents.clear(),this.specialEvents[Math.floor(Math.random()*this.specialEvents.length)];const n=t[Math.floor(Math.random()*t.length)];return this.usedSpecialEvents.add(n),n}static getDialogueType(e,t){return e.includes("游戏")||e.includes("直播")?"gaming":e.includes("社交")||e.includes("感情")?"relationship":e.includes("生活")||e.includes("思考")?"life":"advice"}static getRandomUnusedScene(e){const t=this.sceneHistory.slice(-3).map(o=>o.type),n=e.filter(o=>!t.includes(o));return n.length===0?e[Math.floor(Math.random()*e.length)]:n[Math.floor(Math.random()*n.length)]}static formatSceneHistory(){return this.sceneHistory.slice(-3).map((e,t)=>`场景${t+1}:
类型: ${e.type}
描述: ${e.description}
对话: ${e.dialog}`).join(`

`)}static updateSceneHistory(e){this.sceneHistory.push({type:this.getSceneTypeFromDescription(e.description),description:e.description,dialog:e.dialog}),this.sceneHistory.length>10&&this.sceneHistory.shift()}static getSceneTypeFromDescription(e){for(const t of this.sceneTypes)if(e.includes(t))return t;return"日常生活"}static parseResponse(e,t){try{console.log("解析响应内容:",e);let n=e;const o=e.match(/```(?:json)?\s*([\s\S]*?)\s*```/);o&&o[1]&&(n=o[1],console.log("从代码块中提取的JSON:",n)),n=n.replace(/[\u0000-\u001F\u007F-\u009F]/g,"").replace(/:\s*\+(\d+)/g,": $1").replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/([{,][^,{]*?)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2'),console.log("清理后的JSON内容:",n);let s;try{s=JSON.parse(n),console.log("成功解析JSON:",s)}catch(c){console.error("JSON解析失败，错误:",c);try{n=n.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",").replace(/([{,][^,{]*?)(\w+)(\s*:)/g,'$1"$2"$3').replace(/:\s*([^",\[\]{}][^,\[\]{}]*?)(\s*[,}])/g,':"$1"$2'),console.log("进一步清理后的JSON:",n),s=JSON.parse(n)}catch(r){if(console.error("更激进清理后仍解析失败:",r),e.match(/(\{[\s\S]*\})/))try{console.log("尝试手动构造JSON...");const a=e.match(/"description"\s*:\s*"([^"]+)"/),p=e.match(/"dialog"\s*:\s*"([^"]+)"/);s={description:a?a[1]:"无法解析场景描述",dialog:p?p[1]:"（系统错误，无法获取对话）",options:[],context:{mood:"困惑",location:"当前位置",timeOfDay:"现在",previousEvents:["解析错误"]}};const g=e.match(/"options"\s*:\s*\[([\s\S]*?)\]/);if(g){const f=g[1].match(/"text"\s*:\s*"([^"]+)"/g),w=g[1].match(/"hint"\s*:\s*"([^"]+)"/g);if(f&&f.length>0){s.options=[];for(let m=0;m<f.length;m++){const I=f[m].match(/"text"\s*:\s*"([^"]+)"/);if(!I)continue;const k=I[1];let x="继续";if(w&&m<w.length){const M=w[m].match(/"hint"\s*:\s*"([^"]+)"/);M&&(x=M[1])}s.options.push({text:k,hint:x,impact:{quest:{type:"social",value:5},relationship:{character:"李雪",value:0}}})}}}console.log("手动构造的JSON:",s)}catch(a){throw console.error("手动构造JSON失败:",a),new Error("无法解析JSON响应: "+c.message)}else throw new Error("响应中未找到有效的JSON结构")}}for((!s.description||typeof s.description!="string")&&(console.warn("缺少场景描述或格式不正确，使用默认描述"),s.description="小明站在教室里，思考着下一步该怎么做。周围的同学们各忙各的，有人看书，有人聊天，还有人偷偷玩手机。"),(!s.dialog||typeof s.dialog!="string")&&(console.warn("缺少对话内容或格式不正确，使用默认对话"),s.dialog="我该怎么选择呢？游戏和学习，这是个问题..."),Array.isArray(s.options)||(console.warn("缺少选项或格式不正确，使用默认选项"),s.options=[]);s.options.length<2;)s.options.push({text:s.options.length===0?"专注于学习":"打会游戏放松",hint:s.options.length===0?"提高成绩是当务之急":"游戏也很重要",impact:{quest:{type:s.options.length===0?"study":"gaming",value:5},relationship:{character:"李雪",value:0}}});return{id:t,image:`https://source.unsplash.com/800x500/?${this.getImageKeywords(s.description)}&t=${Date.now()}`,description:s.description.slice(0,300),dialog:s.dialog.slice(0,80),options:s.options.slice(0,3).map(c=>({text:(c.text||"继续探索").slice(0,20),next:-1,hint:(c.hint||"看看接下来会发生什么").slice(0,30),impact:c.impact||{quest:{type:"social",value:5},relationship:{character:"李雪",value:0}}})),isAIGenerated:!0,specialEvent:s.specialEvent?.slice(0,50),context:s.context||{mood:"平静",location:"教室",timeOfDay:"上午",previousEvents:[]},reasoning:s.reasoning}}catch(n){return console.error("解析响应失败:",n),console.error("原始内容:",e),{id:t,image:"https://source.unsplash.com/800x500/?classroom,error&t="+Date.now(),description:"（系统：由于技术原因，无法生成新场景。）小明站在原地，思考着下一步该怎么办。",dialog:"（让我想想接下来该做什么...）",options:[{text:"重新尝试",next:-1,hint:"再试一次",impact:{quest:{type:"social",value:0},relationship:{character:"李雪",value:0}}},{text:"换个方向",next:-1,hint:"尝试其他选择",impact:{quest:{type:"social",value:0},relationship:{character:"李雪",value:0}}}],isAIGenerated:!0,context:{mood:"困惑",location:"当前位置",timeOfDay:"现在",previousEvents:["系统错误"]}}}}static getImageKeywords(e){const t=new Set;return t.add("chinese"),t.add("student"),(e.includes("游戏")||e.includes("直播"))&&(t.add("gaming"),t.add("computer")),(e.includes("学习")||e.includes("考试"))&&(t.add("classroom"),t.add("study")),(e.includes("社交")||e.includes("朋友"))&&(t.add("friends"),t.add("people")),Array.from(t).slice(0,3).join(",")}handleDeepSeekResponse(e){let t=e.replace(/\+(\d+)/g,"$1");t=t.replace(/([{,]\s*)(\w+)(\s*:)/g,'$1"$2"$3'),t=t.replace(/,\s*([}\]])/g,"$1");try{return JSON.parse(t)}catch(n){return console.error("处理DeepSeek响应出错:",n),this.parseResponse(e)}}async handleChoice(e,t){if(console.log(`处理选项: ${e}, 当前场景ID: ${t.currentScene}`),!t.scenes.find(s=>s.id===t.currentScene))throw new Error(`找不到当前场景: ${t.currentScene}`);if(!this.apiBaseUrl)throw console.error("API基础URL未设置"),new Error("API基础URL未设置，无法生成场景");const o={model:this.model,prompt:this.generatePrompt(t,e),temperature:.7,max_tokens:1e3,stream:!1};try{console.log("发送API请求:",{url:`${this.apiBaseUrl}/v1/chat/completions`,model:o.model,temperature:o.temperature,max_tokens:o.max_tokens}),console.log("提示文本:",o.prompt);const s=await fetch(`${this.apiBaseUrl}/v1/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({model:o.model,messages:[{role:"user",content:o.prompt}],temperature:o.temperature,max_tokens:o.max_tokens,stream:o.stream})});if(!s.ok){const p=await s.text();throw console.error("API请求失败:",s.status,p),new Error(`API请求失败: ${s.status} ${p}`)}const i=await s.json();if(console.log("API响应:",i),!i.choices||i.choices.length===0)throw console.error("API响应中没有选择内容:",i),new Error("API响应中没有选择内容");const c=i.choices[0].message.content;console.log("生成的内容:",c);const r=this.handleDeepSeekResponse(c),a={id:t.nextSceneId,image:`https://source.unsplash.com/800x500/?${this.getImageKeywords(r.description)}&t=${Date.now()}`,description:(r.description||"你继续你的旅程...").slice(0,300),dialog:(r.dialog||"（你思考着下一步行动）").slice(0,120),options:(r.options||[]).slice(0,3).map(p=>({text:(p.text||"继续").slice(0,30),next:-1,hint:(p.hint||"看看接下来会发生什么").slice(0,40),impact:p.impact||{quest:{type:"social",value:0},relationship:{character:"李雪",value:0}}})),isAIGenerated:!0,specialEvent:r.specialEvent?.slice(0,50),context:r.context||{mood:"平静",location:"教室",timeOfDay:"上午",previousEvents:["开始游戏"]}};for(console.log("生成的场景:",a);a.options.length<2;)a.options.push({text:a.options.length===0?"仔细观察四周":"继续前进",next:-1,hint:a.options.length===0?"寻找线索":"勇往直前",impact:{quest:{type:"exploration",value:5},relationship:{character:"李雪",value:0}}});return a}catch(s){throw console.error("处理选项时出错:",s),s}}parseResponse(e){console.log("解析响应...");try{let t=e.trim();t=t.replace(/\+(\d+)/g,"$1"),t=t.replace(/,\s*([}\]])/g,"$1"),t=t.replace(/'/g,'"'),t=t.replace(/([{,]\s*)(\w+)(\s*:)/g,'$1"$2"$3'),console.log("清理后的内容:",t);try{const n=JSON.parse(t);return console.log("成功解析完整JSON"),n}catch(n){console.log("无法解析完整JSON，尝试提取部分内容:",n.message);const o={description:"",dialog:"",options:[]},s=t.match(/"description"\s*:\s*"([^"]+)"/);s&&(o.description=s[1]);const i=t.match(/"dialog"\s*:\s*"([^"]+)"/);i&&(o.dialog=i[1]);const c=t.match(/"options"\s*:\s*\[([\s\S]*?)\]/);if(c){const a=c[1].match(/"text"\s*:\s*"([^"]+)"/g),p=c[1].match(/"hint"\s*:\s*"([^"]+)"/g);if(a&&a.length>0){o.options=[];for(let g=0;g<a.length;g++){const f=a[g].match(/"text"\s*:\s*"([^"]+)"/);if(!f)continue;const w=f[1];let m="继续";if(p&&g<p.length){const I=p[g].match(/"hint"\s*:\s*"([^"]+)"/);I&&(m=I[1])}o.options.push({text:w,hint:m,impact:{quest:{type:"social",value:5},relationship:{character:"李雪",value:0}}})}}}const r=t.match(/"specialEvent"\s*:\s*"([^"]+)"/);r&&(o.specialEvent=r[1]);const h=t.match(/"context"\s*:\s*(\{[\s\S]*?\})/);return h&&(o.context=JSON.parse(h[1])),console.log("解析后的场景数据:",o),o}}catch(t){throw console.error("解析响应失败:",t),console.error("原始内容:",e),new Error("无法解析API响应")}}}d(y,"sceneHistory",[]),d(y,"usedSpecialEvents",new Set),d(y,"characterBackground",`角色背景：
- 姓名：小明（游戏ID：最强剑魔）
- 身份：高三学生，知名游戏主播
- 游戏特长：英雄联盟剑魔玩家，连续29天冲击王者失败
- 性格特点：
  1. 游戏时激情四射，现实中是个普通学生
  2. 直播时经常情绪激动导致麦克风爆音
  3. 对游戏有着极强的执着
  4. 对感情和生活有独特见解
- 说话特点：
  1. 游戏相关：
     - "回答我！我Q会不会空？"
     - "这把打完我得了MVP！"
     - "躺赢狗！"
     - "炸麦警告！"
     - "你们可能不知道，我学凯南学得有多像"
  2. 生活感悟：
     - "怎么不找找自己的问题？"
     - "我要采一朵花送给妈妈"
     - "去洗了点阳光青提"
     - "我真的很不明白"
  3. 情感态度：
     - "你很不稳重"
     - "你这三观还是存在点问题"
     - "不要被表面现象所迷惑"
     - "看破不说破，没啥疑不疑惑的"
- 生活环境：
  1. 正在备战高考
  2. 暗恋同学李雪（游戏ID：疯狂打野）
  3. 被班主任王老师重点关注
- 日常挑战：
  1. 平衡学习和游戏时间
  2. 控制直播时的情绪
  3. 处理同学和粉丝关系
  4. 应对高考压力`),d(y,"sceneTypes",["课堂学习","游戏训练","排位赛","直播现场","考试现场","社交互动","家庭生活","社团活动","比赛解说","粉丝互动","感情困惑","人生思考"]),d(y,"specialEvents",["炸麦警告（情绪激动导致麦克风爆音）","躺赢时刻（队友carry）","连招练习（剑魔技能连招）","偶遇李雪（暗恋对象）","王老师突袭（被抓打游戏）","高考倒计时（压力事件）","粉丝认出（身份暴露）","网络卡顿（比赛掉线）","家长谈话（成绩下滑）","赛事解说（受邀解说）","感情困惑（对话选择）","人生思考（价值观碰撞）"]),d(y,"classicQuotes",["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像","我要抽陀螺了！","怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白","你很不稳重","你这三观还是存在点问题","你越大度你对另一半就是不负责的表现","如果要谈你这个年纪就要考虑下半辈子","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的","你俩能聊就聊","你管她干哈","你俩成不成都不好说","漂亮的玩的花","想这么多干啥","这不是很正常的行为吗","我等会就要骂你了","逆天言论","你真是人才","我干了","既然跟你谈了你们就要自己有边界感","能不能听进去我说的","我只能管好我自己","你不是在找个合作租房的室友，你是在找个可以一起面对生活互相扶持的伴侣"]),d(y,"dialogueTypes",{gaming:["回答我！我Q会不会空？","这把打完我得了MVP！","躺赢狗！","炸麦警告！","你们可能不知道，我学凯南学得有多像"],life:["怎么不找找自己的问题？","我要采一朵花送给妈妈","去洗了点阳光青提","我真的很不明白"],relationship:["你很不稳重","你这三观还是存在点问题","不要被表面现象所迷惑","看破不说破，没啥疑不疑惑的"],advice:["你俩能聊就聊","你管她干哈","想这么多干啥","这不是很正常的行为吗"]});export{l as A,S as C,y as D,O as u};
